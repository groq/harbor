name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    types: [labeled]

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'build-release'))
    steps:
      - uses: actions/checkout@v4
      - name: Setup env
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "CUR_TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV
            echo "BASE_TAG=$(cat ./VERSION)" >> $GITHUB_ENV
            echo "PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "CUR_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "BASE_TAG=$(cat ./VERSION)" >> $GITHUB_ENV
            echo "PRERELEASE=$(echo ${{ github.ref_name }} | grep -q 'rc\|alpha\|beta' && echo 'true' || echo 'false')" >> $GITHUB_ENV
          fi
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Build Environment
        run: |
          sudo make versions_prepare check_environment

      - name: Compile Harbor binaries
        run: |
          sudo make compile \
            GOBUILDTAGS="include_oss include_gcs"

      - name: Build Harbor Images
        run: |
          sudo make build \
            GOBUILDTAGS="include_oss include_gcs" \
            BASEIMAGETAG=${{ env.BASE_TAG }} \
            VERSIONTAG=${{ env.CUR_TAG }} \
            TRIVYFLAG=true \
            EXPORTERFLAG=true \
            BUILD_BASE=false \
            PULL_BASE_FROM_DOCKERHUB=true \
            IMAGENAMESPACE=${{ env.REGISTRY }}/${{ github.repository }}

      - name: Push Harbor Images to GHCR
        run: |
          # Get list of built images
          images=$(docker images --format "table {{.Repository}}:{{.Tag}}" | grep "${{ env.REGISTRY }}/${{ github.repository }}" | grep "${{ env.CUR_TAG }}" | awk '{print $1}')
          
          # Push each image
          for image in $images; do
            echo "Pushing $image"
            docker push $image
          done
